#ifndef USH_CONNECT_H
#define USH_CONNECT_H

typedef struct ush_connect * ush_connect_t;

#include "ush_listener.h"
#include "ush_touch.h"
#include "ush_type_pub.h"

typedef ush_u64_t ush_connect_ident;
#define CONNECT_IDENT_VALUE_DEFAULT (0xFFFFFFFFFFFFFFFF)

// Ident     0xAAAAAAAA BBBBBBBB
//                ^        ^
// idx on server _|        |___ certification generated by client


ush_ret_t ush_connect_create(ush_connect_t *pConn);

ush_ret_t ush_connect_destroy(ush_connect_t *pConn);

ush_s32_t ush_connect_generate_cert(const ush_char_t *seed);

ush_connect_ident ush_connect_make_ident(ush_s32_t idx, ush_s32_t certify);

ush_bool_t ush_connect_ident_valid(const ush_connect_t conn);

ush_ret_t ush_connect_set_ident(ush_connect_t conn, ush_connect_ident ident);

ush_ret_t ush_connect_get_ident(ush_connect_t conn, ush_connect_ident *pIdent);

ush_ret_t ush_connect_get_touch(ush_connect_t conn, ush_touch_t *ptr);

ush_ret_t ush_connect_get_listener(ush_connect_t conn, ush_listener_t *ptr);

ush_ret_t ush_connect_cs_enter(ush_connect_t conn);

ush_ret_t ush_connect_cs_exit(ush_connect_t conn);

// ush_ret_t ush_connect_listen_start(ush_connect_t conn, const ush_char_t *path);


#endif // USH_CONNECT_H
